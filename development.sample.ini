#
# greencouriers - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
email_to = admin@YOURDOMAIN
smtp_server = localhost
from_address = noreply@YOURDOMAIN
error_email_from = noreply@YOURDOMAIN
use_facebook = false
use_net = false
use_flir = false

google_maps_api = YOUR_MAPS_API_KEY
use_google_maps = true
#the IL implementation uses the waze.co.il map, while everyone else currently uses google maps.
default_country = IL


[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
lang = he
use = egg:greencouriers
full_stack = true

cache_dir = %(here)s/data
beaker.session.key = greencouriers
beaker.session.secret = CHANGEME1

pw_reset_salt = CHANGEME2
pw_login_salt = CHANGEME3

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
#sqlalchemy.url = sqlite:///%(here)s/development.db
sqlalchemy.url = postgres://DBUSER:DBPASSWORD@DBHOST/DBNAME

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Setup PyFacebook.
pyfacebook.callbackpath = greencouriers
pyfacebook.apikey = FBAPIKEY
pyfacebook.secret = FBSECRET
pyfacebook.appid = FBAPPID

# Logging configuration
[loggers]
keys = root, routes, greencouriers, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_greencouriers]
level = DEBUG
handlers =
qualname = greencouriers

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic



[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
